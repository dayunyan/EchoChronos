# ===============================================================================================
# The following shows the last analyze fail log message.
# ===============================================================================================

----------------------------------------------------
- Caught exception:
----------------------------------------------------
Unsupported input type. For BitXor, only integer types are supported, but got type of x:BoolImm, value of x:false, type of y:BoolImm, value of y:false

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/ccsrc/frontend/operator/cc_implementations.cc:385 BitXor

----------------------------------------------------
- The Traceback of Net Construct Code:
----------------------------------------------------
# 0 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589
                        return grad_(fn, weights)(*args)
                               ^
# 1 In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142
        output = model(
# 2 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389
        if self.__ms_class__:
# 3 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390
            return self.forward(*args, **kwargs)
                   ^
# 4 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596
        if not isinstance(peft_config, PromptLearningConfig):
        ^
# 5 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597
            if self.base_model.config.model_type == "mpt":
            ^
# 6 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390
            return self.forward(*args, **kwargs)
                   ^
# 7 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611
            return self.base_model(
# 8 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389
        if self.__ms_class__:
# 9 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390
            return self.forward(*args, **kwargs)
                   ^
# 10 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218
        return self.model.forward(*args, **kwargs)
               ^
# 11 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767
        if not return_dict:
# 12 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738
        outputs = self.model(
# 13 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389
        if self.__ms_class__:
# 14 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390
            return self.forward(*args, **kwargs)
                   ^
# 15 In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508
        if (input_ids is None) ^ (inputs_embeds is not None):
           ^

# ===============================================================================================
# The following shows the IR when the function graphs evaluation fails to help locate the problem.
# You can search the last ------------------------> to the node which is evaluated failure.
# Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.ir to get more instructions.
# ===============================================================================================

# IR entry: @after_grad_11
# Total subgraphs: 2

# Total params: 3
# Params:
%para1_args0 : <null>
%para2_args1 : <null>
%para3_args2 : <null>

subgraph attr:
subgraph instance: after_grad_11 : 0x1999fe250
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:588/                    def after_grad(*args):/
subgraph @after_grad_11(%para1_args0, %para2_args1, %para3_args2) {
  %1(CNode_60) = MakeTuple(%para1_args0, %para2_args1, %para3_args2)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>) -> (<Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:588/                    def after_grad(*args):/
  %2(61) = UnpackGraph(@forward_fn_3, %1)
      : (<Func, NoShape>, <Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %3(61) = S_Prim_grad(%2, (Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f9b8f8f7-3609-4247-b142-2d989f628ea2), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4fbd35f9-c4f4-4af0-ba6e-5619f9fd437d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0fef3b2c-0d2f-44bf-91d7-3da996952d4c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1208c9c6-db09-47be-a22a-3812146c849b), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2e2c2edc-144b-498a-ab8e-67fdbed04db0), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=cfb33524-2576-4325-b3ee-1ea4967198e4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=11afe08a-ca3e-4a81-94cc-562829adb533), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=ca4b6e85-d9d0-4abd-ad61-04d1a7365b6d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=32dc3747-1e5f-43a2-888e-2c602ee502ac), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=aff979b8-ff55-434d-9139-9f1de16d02ef), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=3df8d7e3-f6b5-4362-afa7-417b7fb204c0), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=caa6b939-2bcb-4da7-9b09-1344bbeda8d4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=45513bd7-0eea-4f4d-814e-3b96542dc8f8), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=ed5ea365-fbc3-4f59-bea6-0835168a02f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2c907196-88ed-4289-be19-53692fdaf59a), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a91fa7e3-d35f-4f98-9632-c88ef267d7f1), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4d395cd9-5756-4ff1-9915-2c6a8ded09ff), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4d03ca39-5c8e-4adc-b701-e0e3d2dfef1d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=bb1f1f56-1cc4-4cb9-ae84-09ff0c486018), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=fb8f82b5-8431-4b86-ac48-6b2e623aa81e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=aa33db07-26a2-4c38-8a65-60bd3a6cebc4), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4635f417-3d88-49c4-b16c-5b90b60fa321), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1afa5a09-13a0-4368-ae09-a8151a006141), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1d08eb45-f39c-4ae1-8897-891a56c077e8), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2b9241ed-8d51-4c16-8f9d-9dc835ec364d), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=04f4c993-543b-49d8-923d-a409f5802249), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=728b242f-3d8e-43f2-a70b-95e7b1e93d1a), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=41fb03a1-6316-4165-9bde-34b80b34c842), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=85f349c1-3c6a-4a80-ad25-e12f307d0d5a), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=6c9adf45-cca1-4ebb-8b72-e6d8422e10b3), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f01d417a-364d-45e1-8b45-9785fd3147cf), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=466622fd-c5a4-4d01-8b20-75d810ed014c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=195269b9-fcb4-43de-ac24-0d643576eec7), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=405282d9-ef20-4dfd-9c1e-25a6aad60611), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f7ee73e9-b319-40c2-8103-3970b225e51c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=9a871a8c-c15a-4d26-b426-f50daf6c140e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=8c3b9692-6f6b-462a-8b3a-5546b12e1c21), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=b343ef0b-5c8a-4d31-b90b-c9239411c282), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0eac46bd-d57e-4daf-86a2-fe604776a631), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=ef9d6ce4-6749-4d1b-b06a-3a21b0116a59), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=03fd6ebc-26f0-42ee-b631-3dda21b6a74f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=61040f28-4c0f-477d-964c-ecaad580c97e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2987492b-dc5f-4979-a51f-ffbbd2d5a77c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=4302ae41-151a-432a-9af3-244ecd752798), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=d1de86fb-fbb7-4b41-afaa-563ba6abd3f0), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=2ac19e65-70f5-438d-bcc9-30921ff9ecc9), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f531d69e-1cad-4dc1-adb3-caf2ec90e8c1), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=5ab29195-a896-4a2d-a5a0-bac1572d96c6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=5524bb84-2bb6-49fd-ae7c-ca7a136b6a97), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f7793258-b3d0-4b90-bd0f-2386d32c9b55), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c6247b98-37bd-404c-b372-0fd624cda33b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=e6468283-eac2-49c4-9837-afca478c46c0), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c889bf5a-97a1-44d9-a38c-94126b235dea), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=c0718964-038a-4084-b592-99d8b441fdc2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=22a52a7e-a6c4-4cfd-b2c9-8b8307097a28), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a5471a9f-6380-4975-a78d-1ff065dea786), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=5e54024f-bbbd-44a4-b023-dea397331824), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=0990e185-96aa-4565-82c1-d7f281aa4a9c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=3864b757-d4fe-49a0-9177-dfba1dae7ff9), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=14820eba-9a82-4721-a94f-a837f0e78c86), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9bee9124-18f2-4b0a-807f-4e1f84c9210a), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=07bb7349-aaff-449f-873a-f72e25863c9e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0ae1a07f-05e5-4b74-8053-c7b7b621ea30), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=c03ec9ca-676a-4077-bafe-c9e0cdb3ecd6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2c489a4c-7073-4242-b79c-820d10bd1778), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=cfd0d8a6-c03e-431d-9718-edda08572248), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=01347b0b-191f-4c1f-8034-b4ef7a88980d), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=48b967bb-902d-4f5e-a894-28d679d7ec56), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=87c6effa-47ca-44db-b4e3-7a45a7b41893), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=a7e66c13-586b-4f0d-9e77-da4394f1f2b2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=a37b6368-6d80-4f2f-b9b1-2e37ce3a1278), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=44fe37b2-2710-4398-9ba2-8c29b42cac37), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ed5b9d7d-b7ab-4401-af92-770745e09a3e), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f4495e2b-a9b6-49b0-9acb-b072e41c43b8), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=45576fa7-67c5-42aa-80bd-889217324214), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2e051006-c1d6-41d8-a624-18002628c9ff), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=94700ebe-28b9-47dc-a972-176cd0315951), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4b8c5e88-90c9-421c-be09-3032881999ce), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7ec6ba0e-022d-4890-b638-cf2c12646f50), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=3a59faf9-d137-40b1-a228-81a3d80336a2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=523b08b2-dae3-4214-95ac-365dda21148f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=a4eaff24-4d46-4569-85c9-661a6384ab07), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=128cc775-e716-4ad2-9cc3-943143365f00), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=6d63d259-088b-48d6-90a3-69ad3aff4166), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=e6385f0b-10d6-426f-8cbd-c94ac4435dcf), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=383381ea-0198-437f-8169-e1b0b0c445f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7dc5407b-e6eb-468e-bf50-fb28a443595b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=c98b35da-666e-433c-a4f1-39a3f787f33b), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9efda489-81fa-4b43-8dd9-e0e7b0f6de37), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=d7547e90-1971-46c6-ad3e-c0f811c54571), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0f1a0270-4b63-439f-91a1-303167989159), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2fcc7000-2c31-4f55-a50f-2291eb5345d2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=55c6580c-5af6-4e29-871b-20fe6ea6d79b), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=28f46efe-32fd-4d7c-b8ef-7e85b923167a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f256da76-46ad-4dc8-9a24-71ea2bd4bebb), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=4174189e-c54f-4f5f-aae7-187aac6385ec), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=15748dca-4c85-4b10-a719-d4d17e5b3475), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=36d382cb-584f-4c6e-adf2-4cabda087797), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1adb2201-91c9-4ded-a1ce-cd29f496a2d8), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=fceeb569-a847-4180-8925-96b3b2843676), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1d922b0e-29be-44da-ab7c-1386995fd3da), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=fec96b36-ecb1-4f7b-ac05-11b051458e5a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4203e3c3-9501-4c51-847e-a88c54166a07), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=6392f5ed-2aea-4e3d-9e0d-e418f329e3df), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c7c1e5d4-7660-4952-a654-a4aade200e26), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=2886709e-77ce-46fb-aca2-7720f3663d0d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9e69c6ba-f2da-4c04-8475-280b3374e5e5), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=d0537744-a2af-4056-a767-6428d46a5afd), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9c2823bd-6892-4f7c-b480-b31ff0771dd1), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=9ba824a0-d000-41d1-83d4-b2d0ceab91a3), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ebd66acc-d044-4e55-b5f3-e49b52ae97c0), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=5437f676-22db-4881-a896-3172d311ff2e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7a0d9bdf-86bb-477c-95f7-d4b89660ff8b), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=65a7b2cd-7616-4d53-b37d-d183ca880924), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=d9165b6a-fbc0-4cdc-9390-5dfb5d34d88f), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=005e4582-80a4-4e73-aba0-2ca69675108f), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ac8484c9-9ed6-42f1-9966-bfe953e1ed8f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=994c5c14-5aa6-4325-86ef-dffd8d80ea35), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=80c59191-1bd7-4452-adc8-2b1f5445f2b5), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=0adb3c51-bb45-42c2-9610-3e31a3ee8e2c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=a037aaa4-ea9c-417a-9a5a-a52c2155244c), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=712eb9c4-d491-489c-af6f-35b5245e10f1), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7bd643d0-b2ff-42ae-99e2-a973bba98db2), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1ca91b2b-c3bf-4f5b-8310-4243a7de3e80), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=76945830-3ebf-4a92-9bb7-23f941cfe012), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f04e3b75-44f1-4f41-a5ea-e3670c55b9f0), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=71dc5871-a958-407d-9d32-5ba5a7654f3f), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=442c4920-61a5-49e0-a2ed-51534b73b6f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=34747fd3-c8e4-4ac5-828f-c3b0129fc07e), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=7fb4d6b1-0238-4873-b6d8-b15db10bd650), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1f5d706b-c5e0-401c-aa72-f0e6a11f573d), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=dea0ae35-1cf2-444a-9419-64297bf993f4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9f01499f-5a3a-4c12-bd9f-386045d9fead), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=164ede0d-90e9-4a22-96b5-1c7bf57af207), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4812307e-9b04-4b55-989d-6fe48ac2a12c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2dfef8d2-6ce4-4796-a6d8-d8f5d108a046), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=659ea867-2140-47f0-9940-2c97abc5a608), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=730abd4a-d2c4-4da6-a9e4-341dbe564e32), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0b399905-c48e-47aa-8214-e1922891299b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a5a2576d-4e4a-4529-bd3d-21533a6e323a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4ffaf65f-e062-44c5-855b-70805ffc56db), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=8c13c79b-bd85-4a28-ac33-299e93d97405), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7c6ade4b-d7d1-4670-8b1e-e4ec3b95fd72), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=8e2371a7-6542-4ba2-b10b-34e25c8b3706)))
      : (<Func, NoShape>, <Tuple[Ref[Tensor[Float32]]*144], TupleShape((8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8))>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 0
  %4(61) = UnpackCall_unpack_call(%3, %1)
      : (<Func, NoShape>, <Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @after_grad_11:61{[0]: ValueNode<UnpackGraphPrimitive> UnpackGraph, [1]: ValueNode<FuncGraph> forward_fn_3, [2]: CNode_60}
#   2: @after_grad_11:61{[0]: ValueNode<DoSignaturePrimitive> S_Prim_grad, [1]: 61, [2]: ValueNode<ValueTuple> (Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f9b8f8f7-3609-4247-b142-2d989f628ea2), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4fbd35f9-c4f4-4af0-ba6e-5619f9fd437d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0fef3b2c-0d2f-44bf-91d7-3da996952d4c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1208c9c6-db09-47be-a22a-3812146c849b), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2e2c2edc-144b-498a-ab8e-67fdbed04db0), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=cfb33524-2576-4325-b3ee-1ea4967198e4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=11afe08a-ca3e-4a81-94cc-562829adb533), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=ca4b6e85-d9d0-4abd-ad61-04d1a7365b6d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=32dc3747-1e5f-43a2-888e-2c602ee502ac), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=aff979b8-ff55-434d-9139-9f1de16d02ef), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=3df8d7e3-f6b5-4362-afa7-417b7fb204c0), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=caa6b939-2bcb-4da7-9b09-1344bbeda8d4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=45513bd7-0eea-4f4d-814e-3b96542dc8f8), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=ed5ea365-fbc3-4f59-bea6-0835168a02f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2c907196-88ed-4289-be19-53692fdaf59a), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a91fa7e3-d35f-4f98-9632-c88ef267d7f1), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4d395cd9-5756-4ff1-9915-2c6a8ded09ff), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4d03ca39-5c8e-4adc-b701-e0e3d2dfef1d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=bb1f1f56-1cc4-4cb9-ae84-09ff0c486018), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=fb8f82b5-8431-4b86-ac48-6b2e623aa81e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=aa33db07-26a2-4c38-8a65-60bd3a6cebc4), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4635f417-3d88-49c4-b16c-5b90b60fa321), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1afa5a09-13a0-4368-ae09-a8151a006141), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1d08eb45-f39c-4ae1-8897-891a56c077e8), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2b9241ed-8d51-4c16-8f9d-9dc835ec364d), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=04f4c993-543b-49d8-923d-a409f5802249), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=728b242f-3d8e-43f2-a70b-95e7b1e93d1a), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=41fb03a1-6316-4165-9bde-34b80b34c842), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=85f349c1-3c6a-4a80-ad25-e12f307d0d5a), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=6c9adf45-cca1-4ebb-8b72-e6d8422e10b3), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f01d417a-364d-45e1-8b45-9785fd3147cf), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=466622fd-c5a4-4d01-8b20-75d810ed014c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=195269b9-fcb4-43de-ac24-0d643576eec7), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=405282d9-ef20-4dfd-9c1e-25a6aad60611), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f7ee73e9-b319-40c2-8103-3970b225e51c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=9a871a8c-c15a-4d26-b426-f50daf6c140e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=8c3b9692-6f6b-462a-8b3a-5546b12e1c21), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=b343ef0b-5c8a-4d31-b90b-c9239411c282), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0eac46bd-d57e-4daf-86a2-fe604776a631), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=ef9d6ce4-6749-4d1b-b06a-3a21b0116a59), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=03fd6ebc-26f0-42ee-b631-3dda21b6a74f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=61040f28-4c0f-477d-964c-ecaad580c97e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2987492b-dc5f-4979-a51f-ffbbd2d5a77c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=4302ae41-151a-432a-9af3-244ecd752798), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=d1de86fb-fbb7-4b41-afaa-563ba6abd3f0), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=2ac19e65-70f5-438d-bcc9-30921ff9ecc9), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f531d69e-1cad-4dc1-adb3-caf2ec90e8c1), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=5ab29195-a896-4a2d-a5a0-bac1572d96c6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=5524bb84-2bb6-49fd-ae7c-ca7a136b6a97), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f7793258-b3d0-4b90-bd0f-2386d32c9b55), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c6247b98-37bd-404c-b372-0fd624cda33b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=e6468283-eac2-49c4-9837-afca478c46c0), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c889bf5a-97a1-44d9-a38c-94126b235dea), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=c0718964-038a-4084-b592-99d8b441fdc2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=22a52a7e-a6c4-4cfd-b2c9-8b8307097a28), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a5471a9f-6380-4975-a78d-1ff065dea786), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=5e54024f-bbbd-44a4-b023-dea397331824), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=0990e185-96aa-4565-82c1-d7f281aa4a9c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=3864b757-d4fe-49a0-9177-dfba1dae7ff9), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=14820eba-9a82-4721-a94f-a837f0e78c86), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9bee9124-18f2-4b0a-807f-4e1f84c9210a), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=07bb7349-aaff-449f-873a-f72e25863c9e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0ae1a07f-05e5-4b74-8053-c7b7b621ea30), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=c03ec9ca-676a-4077-bafe-c9e0cdb3ecd6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=2c489a4c-7073-4242-b79c-820d10bd1778), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=cfd0d8a6-c03e-431d-9718-edda08572248), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=01347b0b-191f-4c1f-8034-b4ef7a88980d), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=48b967bb-902d-4f5e-a894-28d679d7ec56), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=87c6effa-47ca-44db-b4e3-7a45a7b41893), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=a7e66c13-586b-4f0d-9e77-da4394f1f2b2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=a37b6368-6d80-4f2f-b9b1-2e37ce3a1278), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=44fe37b2-2710-4398-9ba2-8c29b42cac37), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ed5b9d7d-b7ab-4401-af92-770745e09a3e), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f4495e2b-a9b6-49b0-9acb-b072e41c43b8), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=45576fa7-67c5-42aa-80bd-889217324214), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2e051006-c1d6-41d8-a624-18002628c9ff), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=94700ebe-28b9-47dc-a972-176cd0315951), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=4b8c5e88-90c9-421c-be09-3032881999ce), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7ec6ba0e-022d-4890-b638-cf2c12646f50), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=3a59faf9-d137-40b1-a228-81a3d80336a2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=523b08b2-dae3-4214-95ac-365dda21148f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=a4eaff24-4d46-4569-85c9-661a6384ab07), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=128cc775-e716-4ad2-9cc3-943143365f00), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=6d63d259-088b-48d6-90a3-69ad3aff4166), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=e6385f0b-10d6-426f-8cbd-c94ac4435dcf), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=383381ea-0198-437f-8169-e1b0b0c445f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7dc5407b-e6eb-468e-bf50-fb28a443595b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=c98b35da-666e-433c-a4f1-39a3f787f33b), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9efda489-81fa-4b43-8dd9-e0e7b0f6de37), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=d7547e90-1971-46c6-ad3e-c0f811c54571), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0f1a0270-4b63-439f-91a1-303167989159), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2fcc7000-2c31-4f55-a50f-2291eb5345d2), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=55c6580c-5af6-4e29-871b-20fe6ea6d79b), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=28f46efe-32fd-4d7c-b8ef-7e85b923167a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=f256da76-46ad-4dc8-9a24-71ea2bd4bebb), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=4174189e-c54f-4f5f-aae7-187aac6385ec), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=15748dca-4c85-4b10-a719-d4d17e5b3475), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=36d382cb-584f-4c6e-adf2-4cabda087797), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1adb2201-91c9-4ded-a1ce-cd29f496a2d8), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=fceeb569-a847-4180-8925-96b3b2843676), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1d922b0e-29be-44da-ab7c-1386995fd3da), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=fec96b36-ecb1-4f7b-ac05-11b051458e5a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4203e3c3-9501-4c51-847e-a88c54166a07), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=6392f5ed-2aea-4e3d-9e0d-e418f329e3df), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=c7c1e5d4-7660-4952-a654-a4aade200e26), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=2886709e-77ce-46fb-aca2-7720f3663d0d), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9e69c6ba-f2da-4c04-8475-280b3374e5e5), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=d0537744-a2af-4056-a767-6428d46a5afd), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9c2823bd-6892-4f7c-b480-b31ff0771dd1), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=9ba824a0-d000-41d1-83d4-b2d0ceab91a3), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ebd66acc-d044-4e55-b5f3-e49b52ae97c0), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=5437f676-22db-4881-a896-3172d311ff2e), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7a0d9bdf-86bb-477c-95f7-d4b89660ff8b), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=65a7b2cd-7616-4d53-b37d-d183ca880924), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=d9165b6a-fbc0-4cdc-9390-5dfb5d34d88f), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=005e4582-80a4-4e73-aba0-2ca69675108f), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=ac8484c9-9ed6-42f1-9966-bfe953e1ed8f), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=994c5c14-5aa6-4325-86ef-dffd8d80ea35), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=80c59191-1bd7-4452-adc8-2b1f5445f2b5), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=0adb3c51-bb45-42c2-9610-3e31a3ee8e2c), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=a037aaa4-ea9c-417a-9a5a-a52c2155244c), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=712eb9c4-d491-489c-af6f-35b5245e10f1), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7bd643d0-b2ff-42ae-99e2-a973bba98db2), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=1ca91b2b-c3bf-4f5b-8310-4243a7de3e80), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=76945830-3ebf-4a92-9bb7-23f941cfe012), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=f04e3b75-44f1-4f41-a5ea-e3670c55b9f0), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=71dc5871-a958-407d-9d32-5ba5a7654f3f), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=442c4920-61a5-49e0-a2ed-51534b73b6f6), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=34747fd3-c8e4-4ac5-828f-c3b0129fc07e), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=7fb4d6b1-0238-4873-b6d8-b15db10bd650), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=1f5d706b-c5e0-401c-aa72-f0e6a11f573d), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=dea0ae35-1cf2-444a-9419-64297bf993f4), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=9f01499f-5a3a-4c12-bd9f-386045d9fead), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=164ede0d-90e9-4a22-96b5-1c7bf57af207), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4812307e-9b04-4b55-989d-6fe48ac2a12c), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=2dfef8d2-6ce4-4796-a6d8-d8f5d108a046), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=659ea867-2140-47f0-9940-2c97abc5a608), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=730abd4a-d2c4-4da6-a9e4-341dbe564e32), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=0b399905-c48e-47aa-8214-e1922891299b), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=a5a2576d-4e4a-4529-bd3d-21533a6e323a), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=4ffaf65f-e062-44c5-855b-70805ffc56db), Tensor(shape=[2048, 8], dtype=Float32, value=[...], name=8c13c79b-bd85-4a28-ac33-299e93d97405), Tensor(shape=[8, 2048], dtype=Float32, value=[...], name=7c6ade4b-d7d1-4670-8b1e-e4ec3b95fd72), Tensor(shape=[256, 8], dtype=Float32, value=[...], name=8e2371a7-6542-4ba2-b10b-34e25c8b3706))}
#   3: @after_grad_11:61{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.62, [1]: 61, [2]: CNode_60}
#   4: @after_grad_11:CNode_63{[0]: ValueNode<Primitive> Return, [1]: 61}


subgraph attr:
core : 1
subgraph instance: UnpackCall_12 : 0x199a3e160
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
subgraph @UnpackCall_12(%para4_, %para5_) {
  %1(61) = TupleGetItem(%para5_14, I64(0))
      : (<Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>, <Int64, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %2(61) = TupleGetItem(%para5_14, I64(1))
      : (<Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>, <Int64, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %3(61) = TupleGetItem(%para5_14, I64(2))
      : (<Tuple[Tensor[Int64]*3], TupleShape((3, 128), (3, 128), (3, 128))>, <Int64, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 1
  %4(61) = %para4_13(%1, %2, %3)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @UnpackCall_12:61{[0]: param_13, [1]: 61, [2]: 61, [3]: 61}
#   2: @UnpackCall_12:61{[0]: ValueNode<Primitive> Return, [1]: 61}


subgraph attr:
k_graph : 1
core : 1
subgraph instance: grad_forward_fn_15 : 0x199a40a30
# In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:141/    def forward_fn(input_ids, attention_mask, labels):/
subgraph @grad_forward_fn_15 parent: [subgraph @grad_forward_fn_64](%para6_, %para7_, %para8_) {
  %1(61) = $(grad_forward_fn_64):J[side_effect_propagate: I64(1)](%para-1_65)
      : (<Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 2
  %2(61) = %1(%para6_grad_forward_fn, %para7_grad_forward_fn, %para8_grad_forward_fn)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %3(61) = TupleGetItem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %4(61) = TupleGetItem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %5(61) = HyperMapPy_hyper_map[ones_like_leaf]{fn_leaf=MultitypeFuncGraph_ones_like_leaf{(NoneType), (CSRTensor), (COOTensor), (Tensor), (Func), (Number), (TypeType)}}(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %6(61) = %4(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %7(61) = TupleGetItem(%6, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %8(61) = Partial[side_effect_propagate: I64(1)](MultitypeFuncGraph_env_get{(EnvType, MapTensor), (EnvType, Tensor)}, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %9(61) = HyperMap_hyper_map(%8, %para-1_66)
      : (<null>, <Tuple[Ref[Tensor[Float32]]*144], TupleShape((8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8), (8, 2048), (2048, 8), (8, 2048), (256, 8))>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %10(61) = MakeTuple(%3, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @grad_forward_fn_15:61{[0]: 61, [1]: param_grad_forward_fn, [2]: param_grad_forward_fn, [3]: param_grad_forward_fn}
#   2: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> TupleGetItem, [1]: 61, [2]: ValueNode<Int64Imm> 0}
#   3: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> TupleGetItem, [1]: 61, [2]: ValueNode<Int64Imm> 1}
#   4: @grad_forward_fn_15:61{[0]: ValueNode<HyperMapPy> MetaFuncGraph-hyper_map[ones_like_leaf].67, [1]: 61}
#   5: @grad_forward_fn_15:61{[0]: 61, [1]: 61}
#   6: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> TupleGetItem, [1]: 61, [2]: ValueNode<Int64Imm> 0}
#   7: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> Partial, [1]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-env_get.68, [2]: 61}
#   8: @grad_forward_fn_15:61{[0]: ValueNode<HyperMap> MetaFuncGraph-hyper_map.69, [1]: 61, [2]: param_66}
#   9: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> MakeTuple, [1]: 61, [2]: 61}
#  10: @grad_forward_fn_15:61{[0]: ValueNode<Primitive> Return, [1]: 61}


subgraph attr:
defer_inline : 1
subgraph instance: forward_fn_3 : 0x1999fe9e0
# In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:141/    def forward_fn(input_ids, attention_mask, labels):/
subgraph @forward_fn_3(%para9_input_ids, %para10_attention_mask, %para11_labels) {
  %1(CNode_70) = S_Prim_MakeTuple("input_ids", "attention_mask", "labels")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*3], TupleShape(NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %2(CNode_71) = S_Prim_MakeTuple(%para9_input_ids, %para10_attention_mask, None)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None], TupleShape((3, 128), (3, 128), NoShape)>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %3(CNode_72) = S_Prim_make_dict(%1, %2)
      : (<Tuple[String*3], TupleShape(NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None], TupleShape((3, 128), (3, 128), NoShape)>) -> (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/

#------------------------> 3
  %4(output) = UnpackCall_unpack_call(MsClassObject, %3)
      : (<Class, NoShape>, <Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %5(CNode_73) = getattr(%4, "logits")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:147/        loss = compute_ce_loss(output.logits, labels)/
  %6(loss) = call @compute_ce_loss_74(%5, %para11_labels)
      : (<null>, <Tensor[Int64], (3, 128)>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:147/        loss = compute_ce_loss(output.logits, labels)/
  %7(CNode_75) = getattr(%4, "logits")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:148/        return loss, output.logits/
  %8(CNode_76) = S_Prim_MakeTuple(%6, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:148/        return loss, output.logits/
  %9(CNode_77) = GradAux_aux_fn(%8, Bool(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:148/        return loss, output.logits/
}
# Order:
#   1: @forward_fn_3:CNode_70{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> input_ids, [2]: ValueNode<StringImm> attention_mask, [3]: ValueNode<StringImm> labels}
#   2: @forward_fn_3:CNode_71{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_input_ids, [2]: param_attention_mask, [3]: ValueNode<None> None}
#   3: @forward_fn_3:CNode_72{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_70, [2]: CNode_71}
#   4: @forward_fn_3:output{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.78, [1]: ValueNode<MsClassObject> MsClassObject: 'PeftModelForCausalLM', [2]: CNode_72}
#   5: @forward_fn_3:CNode_73{[0]: ValueNode<Primitive> getattr, [1]: output, [2]: ValueNode<StringImm> logits}
#   6: @forward_fn_3:loss{[0]: ValueNode<FuncGraph> compute_ce_loss_74, [1]: CNode_73, [2]: param_labels}
#   7: @forward_fn_3:CNode_75{[0]: ValueNode<Primitive> getattr, [1]: output, [2]: ValueNode<StringImm> logits}
#   8: @forward_fn_3:CNode_76{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: loss, [2]: CNode_75}
#   9: @forward_fn_3:CNode_79{[0]: ValueNode<Primitive> Return, [1]: CNode_77}
#  10: @forward_fn_3:CNode_77{[0]: ValueNode<GradAux> MetaFuncGraph-aux_fn.80, [1]: CNode_76, [2]: ValueNode<BoolImm> true}


subgraph attr:
core : 1
subgraph instance: UnpackCall_16 : 0x199a57670
# In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
subgraph @UnpackCall_16(%para12_, %para13_) {
  %1(output) = dict_getitem(%para13_18, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %2(output) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %3(output) = dict_getitem(%para13_18, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %4(output) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %5(output) = dict_getitem(%para13_18, "labels")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  %6(output) = make_keyword_arg("labels", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : labels, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/

#------------------------> 4
  %7(output) = %para12_17(%2, %4, %6)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:142/        output = model(/
}
# Order:
#   1: @UnpackCall_16:output{[0]: param_17, [1]: output, [2]: output, [3]: output}
#   2: @UnpackCall_16:output{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
subgraph instance: _wrapped_call_impl_19 : 0x199a63ed0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @_wrapped_call_impl_19(%para14_kwargs[input_ids], %para15_kwargs[attention_mask], %para16_kwargs[labels]) {

#------------------------> 5
  %1(CNode_81) = call @✓_wrapped_call_impl_20()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
}
# Order:
#   1: @_wrapped_call_impl_19:CNode_81{[0]: ValueNode<FuncGraph> ✓_wrapped_call_impl_20}
#   2: @_wrapped_call_impl_19:CNode_82{[0]: ValueNode<Primitive> Return, [1]: CNode_81}
#   3: @_wrapped_call_impl_19:CNode_83{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.peft_model..<PeftModelForCausalLM::139902791890304>', [2]: ValueNode<Symbol> forward}


subgraph attr:
subgraph instance: ✓_wrapped_call_impl_20 : 0x199a5cf00
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @✓_wrapped_call_impl_20 parent: [subgraph @_wrapped_call_impl_19]() {
  %1(CNode_83) = $(_wrapped_call_impl_19):resolve(ClassMember, forward)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_84) = $(_wrapped_call_impl_19):MakeTuple()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %3(CNode_85) = $(_wrapped_call_impl_19):MakeTuple("input_ids", "attention_mask", "labels")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*3], TupleShape(NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %4(CNode_86) = $(_wrapped_call_impl_19):extract_keyword_arg("input_ids", %para14_kwargs[input_ids])
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %5(CNode_87) = $(_wrapped_call_impl_19):extract_keyword_arg("attention_mask", %para15_kwargs[attention_mask])
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %6(CNode_88) = $(_wrapped_call_impl_19):extract_keyword_arg("labels", %para16_kwargs[labels])
      : (<String, NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %7(CNode_89) = $(_wrapped_call_impl_19):MakeTuple(%4, %5, %6)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None], TupleShape((3, 128), (3, 128), NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %8(CNode_90) = $(_wrapped_call_impl_19):make_dict(%3, %7)
      : (<Tuple[String*3], TupleShape(NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None], TupleShape((3, 128), (3, 128), NoShape)>) -> (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/

#------------------------> 6
  %9(CNode_91) = UnpackCall_unpack_call(%1, %2, %8)
      : (<Func, NoShape>, <Tuple[], TupleShape()>, <Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @✓_wrapped_call_impl_20:CNode_91{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.92, [1]: CNode_83, [2]: CNode_84, [3]: CNode_90}
#   2: @✓_wrapped_call_impl_20:CNode_93{[0]: ValueNode<Primitive> Return, [1]: CNode_91}


subgraph attr:
core : 1
subgraph instance: UnpackCall_21 : 0x199aedd30
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
subgraph @UnpackCall_21(%para17_, %para18_, %para19_) {
  %1(CNode_91) = dict_getitem(%para19_24, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_91) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %3(CNode_91) = dict_getitem(%para19_24, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %4(CNode_91) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %5(CNode_91) = dict_getitem(%para19_24, "labels")
      : (<Dictionary[[input_ids,attention_mask,labels,],[Tensor[Int64]*2,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %6(CNode_91) = make_keyword_arg("labels", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : labels, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/

#------------------------> 7
  %7(CNode_91) = %para17_22(%2, %4, %6)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @UnpackCall_21:CNode_91{[0]: param_22, [1]: CNode_91, [2]: CNode_91, [3]: CNode_91}
#   2: @UnpackCall_21:CNode_91{[0]: ValueNode<Primitive> Return, [1]: CNode_91}


subgraph attr:
subgraph instance: forward_25 : 0x199b042d0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:580/    def forward(/
subgraph @forward_25(%para20_input_ids, %para21_attention_mask, %para22_labels) {
  %1(CNode_94) = resolve(Ast, not_)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %2(CNode_95) = resolve(SymbolStr, isinstance)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %3(peft_config) = resolve(ClassMember, active_peft_config)
      : (<External, NoShape>, <External, NoShape>) -> (<External, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:595/        peft_config = self.active_peft_config/
  %4(CNode_96) = resolve(SymbolStr, PromptLearningConfig)
      : (<External, NoShape>, <External, NoShape>) -> (<TypeType, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %5(CNode_97) = %2(%3, %4)
      : (<External, NoShape>, <TypeType, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %6(CNode_98) = %1(%5)
      : (<Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %7(CNode_99) = Cond(%6, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  %8(CNode_100) = Switch(%7, @✓forward_26, @✗forward_101)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/

#------------------------> 8
  %9(CNode_102) = %8()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:596/        if not isinstance(peft_config, PromptLearningConfig):/
}
# Order:
#   1: @forward_25:CNode_94{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> not_}
#   2: @forward_25:CNode_95{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.peft.peft_model', [2]: ValueNode<Symbol> isinstance}
#   3: @forward_25:CNode_96{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.peft.peft_model', [2]: ValueNode<Symbol> PromptLearningConfig}
#   4: @forward_103:CNode_104{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   5: @forward_103:CNode_105{[0]: CNode_104, [1]: peft_config, [2]: CNode_96}
#   6: @forward_25:CNode_97{[0]: CNode_95, [1]: peft_config, [2]: CNode_96}
#   7: @forward_25:CNode_98{[0]: CNode_94, [1]: CNode_97}
#   8: @forward_25:CNode_99{[0]: ValueNode<Primitive> Cond, [1]: CNode_98, [2]: ValueNode<BoolImm> false}
#   9: @forward_25:CNode_106{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.peft_model..<PeftModelForCausalLM::139902791890304>', [2]: ValueNode<Symbol> base_model}
#  10: @forward_25:CNode_107{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.peft.peft_model', [2]: ValueNode<Symbol> PeftType}
#  11: @forward_25:CNode_100{[0]: ValueNode<Primitive> Switch, [1]: CNode_99, [2]: ValueNode<FuncGraph> ✓forward_26, [3]: ValueNode<FuncGraph> ✗forward_101}
#  12: @forward_25:CNode_102{[0]: CNode_100}
#  13: @forward_25:CNode_108{[0]: ValueNode<Primitive> Return, [1]: CNode_102}
#  14: @forward_25:CNode_109{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.peft.peft_model', [2]: ValueNode<Symbol> ops}
#  15: @forward_25:CNode_110{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.peft_model..<PeftModelForCausalLM::139902791890304>', [2]: ValueNode<Symbol> get_prompt}
#  16: @forward_25:CNode_111{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.peft_model..<PeftModelForCausalLM::139902791890304>', [2]: ValueNode<Symbol> word_embeddings}


subgraph attr:
subgraph instance: ✓forward_26 : 0x199b89250
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:580/    def forward(/
subgraph @✓forward_26 parent: [subgraph @forward_25]() {
  %1(CNode_112) = resolve(Ast, eq)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %2(CNode_106) = $(forward_25):resolve(ClassMember, base_model)
      : (<External, NoShape>, <External, NoShape>) -> (<Class, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %3(CNode_113) = getattr(%2, "config")
      : (<Class, NoShape>, <String, NoShape>) -> (<External, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %4(CNode_114) = getattr(%3, "model_type")
      : (<External, NoShape>, <String, NoShape>) -> (<String, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %5(CNode_115) = %1(%4, "mpt")
      : (<String, NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %6(CNode_116) = Cond(%5, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %7(CNode_117) = Switch(%6, @2✓forward_118, @✗✓forward_27)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/

#------------------------> 9
  %8(CNode_119) = %7()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
}
# Order:
#   1: @✓forward_26:CNode_114{[0]: ValueNode<Primitive> getattr, [1]: CNode_113, [2]: ValueNode<StringImm> model_type}
#   2: @✓forward_26:CNode_112{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> eq}
#   3: @✓forward_26:CNode_115{[0]: CNode_112, [1]: CNode_114, [2]: ValueNode<StringImm> mpt}
#   4: @✓forward_26:CNode_116{[0]: ValueNode<Primitive> Cond, [1]: CNode_115, [2]: ValueNode<BoolImm> false}
#   5: @✓forward_26:CNode_117{[0]: ValueNode<Primitive> Switch, [1]: CNode_116, [2]: ValueNode<FuncGraph> 2✓forward_118, [3]: ValueNode<FuncGraph> ✗✓forward_27}
#   6: @✓forward_26:CNode_119{[0]: CNode_117}
#   7: @✓forward_26:CNode_120{[0]: ValueNode<Primitive> Return, [1]: CNode_119}
#   8: @✓forward_26:CNode_121{[0]: ValueNode<Primitive> MakeTuple, [1]: ValueNode<StringImm> __py_exec_index1_getattr__, [2]: ValueNode<StringImm> __py_exec_index2_getattr__}
#   9: @✓forward_26:CNode_122{[0]: ValueNode<Primitive> MakeTuple, [1]: CNode_113, [2]: ValueNode<StringImm> model_type}
#  10: @✓forward_26:CNode_123{[0]: ValueNode<Primitive> make_dict, [1]: CNode_121, [2]: CNode_122}


subgraph attr:
subgraph instance: ✗✓forward_27 : 0x199b8b9b0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:580/    def forward(/
subgraph @✗✓forward_27 parent: [subgraph @forward_25]() {

#------------------------> 10
  %1(CNode_124) = call @↓✓forward_28()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
}
# Order:
#   1: @✗✓forward_27:CNode_124{[0]: ValueNode<FuncGraph> ↓✓forward_28}
#   2: @✗✓forward_27:CNode_125{[0]: ValueNode<Primitive> Return, [1]: CNode_124}


subgraph attr:
after_block : 1
subgraph instance: ↓✓forward_28 : 0x199b8cc20
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:580/    def forward(/
subgraph @↓✓forward_28 parent: [subgraph @forward_25]() {
  %1(CNode_126) = resolve(Ast, eq)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %2(peft_config) = $(forward_25):resolve(ClassMember, active_peft_config)
      : (<External, NoShape>, <External, NoShape>) -> (<External, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:595/        peft_config = self.active_peft_config/
  %3(CNode_127) = getattr(%2, "peft_type")
      : (<External, NoShape>, <String, NoShape>) -> (<String, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %4(CNode_107) = $(forward_25):resolve(SymbolStr, PeftType)
      : (<External, NoShape>, <External, NoShape>) -> (<TypeType, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %5(CNode_128) = getattr(%4, "POLY")
      : (<TypeType, NoShape>, <String, NoShape>) -> (<String, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %6(CNode_129) = %1(%3, %5)
      : (<String, NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %7(CNode_130) = Cond(%6, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %8(CNode_131) = Switch(%7, @✓↓✓forward_132, @✗↓✓forward_133)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
  %9(CNode_134) = %8()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/

#------------------------> 11
  %10(CNode_135) = call @2↓✓forward_29(%9)
      : (<Dictionary[[],[]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:609/            if peft_config.peft_type == PeftType.POLY:/
}
# Order:
#   1: @↓✓forward_28:CNode_127{[0]: ValueNode<Primitive> getattr, [1]: peft_config, [2]: ValueNode<StringImm> peft_type}
#   2: @↓✓forward_28:CNode_128{[0]: ValueNode<Primitive> getattr, [1]: CNode_107, [2]: ValueNode<StringImm> POLY}
#   3: @↓✓forward_28:CNode_126{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> eq}
#   4: @↓✓forward_28:CNode_129{[0]: CNode_126, [1]: CNode_127, [2]: CNode_128}
#   5: @↓✓forward_28:CNode_130{[0]: ValueNode<Primitive> Cond, [1]: CNode_129, [2]: ValueNode<BoolImm> false}
#   6: @↓✓forward_28:CNode_131{[0]: ValueNode<Primitive> Switch, [1]: CNode_130, [2]: ValueNode<FuncGraph> ✓↓✓forward_132, [3]: ValueNode<FuncGraph> ✗↓✓forward_133}
#   7: @↓✓forward_28:CNode_134{[0]: CNode_131}
#   8: @↓✓forward_28:CNode_135{[0]: ValueNode<FuncGraph> 2↓✓forward_29, [1]: CNode_134}
#   9: @↓✓forward_28:CNode_136{[0]: ValueNode<Primitive> Return, [1]: CNode_135}
#  10: @↓✓forward_28:CNode_137{[0]: ValueNode<Primitive> MakeTuple, [1]: ValueNode<StringImm> __py_exec_index1_getattr__, [2]: ValueNode<StringImm> __py_exec_index2_getattr__}
#  11: @↓✓forward_28:CNode_138{[0]: ValueNode<Primitive> MakeTuple, [1]: peft_config, [2]: ValueNode<StringImm> peft_type}
#  12: @↓✓forward_28:CNode_139{[0]: ValueNode<Primitive> make_dict, [1]: CNode_137, [2]: CNode_138}


subgraph attr:
after_block : 1
subgraph instance: 2↓✓forward_29 : 0x199b946f0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:580/    def forward(/
subgraph @2↓✓forward_29 parent: [subgraph @forward_25](%para23_) {
  %1(CNode_106) = $(forward_25):resolve(ClassMember, base_model)
      : (<External, NoShape>, <External, NoShape>) -> (<Class, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:597/            if self.base_model.config.model_type == "mpt":/
  %2(CNode_140) = resolve(CommonOPS, make_dict)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %3(CNode_141) = resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %4(CNode_142) = %3("input_ids", "attention_mask", "inputs_embeds", "labels", "output_attentions", "output_hidden_states", "return_dict")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %5(CNode_143) = resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %6(CNode_144) = $(forward_25):extract_keyword_arg("input_ids", %para20_input_ids)
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %7(CNode_145) = $(forward_25):extract_keyword_arg("attention_mask", %para21_attention_mask)
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %8(CNode_146) = $(forward_25):extract_keyword_arg("labels", %para22_labels)
      : (<String, NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %9(CNode_147) = %5(%6, %7, None, %8, None, None, None)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %10(CNode_148) = %2(%4, %9)
      : (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>) -> (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/

#------------------------> 12
  %11(CNode_149) = UnpackCall_unpack_call(%1, %para23_фkwargs, %10)
      : (<Class, NoShape>, <Dictionary[[],[]], NoShape>, <Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
}
# Order:
#   1: @2↓✓forward_150:фself.base_model{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.peft_model..<PeftModelForCausalLM::139902791890304>', [2]: ValueNode<Symbol> base_model}
#   2: @2↓✓forward_29:CNode_141{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   3: @2↓✓forward_29:CNode_142{[0]: CNode_141, [1]: ValueNode<StringImm> input_ids, [2]: ValueNode<StringImm> attention_mask, [3]: ValueNode<StringImm> inputs_embeds, [4]: ValueNode<StringImm> labels, [5]: ValueNode<StringImm> output_attentions, [6]: ValueNode<StringImm> output_hidden_states, [7]: ValueNode<StringImm> return_dict}
#   4: @2↓✓forward_29:CNode_143{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   5: @2↓✓forward_29:CNode_147{[0]: CNode_143, [1]: CNode_144, [2]: CNode_145, [3]: ValueNode<None> None, [4]: CNode_146, [5]: ValueNode<None> None, [6]: ValueNode<None> None, [7]: ValueNode<None> None}
#   6: @2↓✓forward_29:CNode_140{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> make_dict}
#   7: @2↓✓forward_29:CNode_148{[0]: CNode_140, [1]: CNode_142, [2]: CNode_147}
#   8: @2↓✓forward_29:CNode_149{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.151, [1]: CNode_106, [2]: param_фkwargs, [3]: CNode_148}
#   9: @2↓✓forward_29:CNode_152{[0]: ValueNode<Primitive> Return, [1]: CNode_149}


subgraph attr:
core : 1
subgraph instance: UnpackCall_30 : 0x199c53280
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
subgraph @UnpackCall_30(%para24_, %para25_, %para26_) {
  %1(CNode_149) = dict_getitem(%para26_33, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %2(CNode_149) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %3(CNode_149) = dict_getitem(%para26_33, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %4(CNode_149) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %5(CNode_149) = dict_getitem(%para26_33, "inputs_embeds")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %6(CNode_149) = make_keyword_arg("inputs_embeds", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : inputs_embeds, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %7(CNode_149) = dict_getitem(%para26_33, "labels")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %8(CNode_149) = make_keyword_arg("labels", %7)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : labels, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %9(CNode_149) = dict_getitem(%para26_33, "output_attentions")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %10(CNode_149) = make_keyword_arg("output_attentions", %9)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_attentions, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %11(CNode_149) = dict_getitem(%para26_33, "output_hidden_states")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %12(CNode_149) = make_keyword_arg("output_hidden_states", %11)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_hidden_states, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %13(CNode_149) = dict_getitem(%para26_33, "return_dict")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  %14(CNode_149) = make_keyword_arg("return_dict", %13)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : return_dict, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/

#------------------------> 13
  %15(CNode_149) = %para24_31(%2, %4, %6, %8, %10, %12, %14)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>, <Keyword[key : labels, value : None], NoShape>, <Keyword[key : output_attentions, value : None], NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
  Return(%15)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/peft_model.py:611/            return self.base_model(/
}
# Order:
#   1: @UnpackCall_30:CNode_149{[0]: param_31, [1]: CNode_149, [2]: CNode_149, [3]: CNode_149, [4]: CNode_149, [5]: CNode_149, [6]: CNode_149, [7]: CNode_149}
#   2: @UnpackCall_30:CNode_149{[0]: ValueNode<Primitive> Return, [1]: CNode_149}


subgraph attr:
subgraph instance: _wrapped_call_impl_34 : 0x199c63550
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @_wrapped_call_impl_34(%para27_kwargs[input_ids], %para28_kwargs[attention_mask], %para29_kwargs[inputs_embeds], %para30_kwargs[labels], %para31_kwargs[output_attentions], %para32_kwargs[output_hidden_states], %para33_kwargs[return_dict]) {

#------------------------> 14
  %1(CNode_153) = call @✓_wrapped_call_impl_35()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
}
# Order:
#   1: @_wrapped_call_impl_34:CNode_153{[0]: ValueNode<FuncGraph> ✓_wrapped_call_impl_35}
#   2: @_wrapped_call_impl_34:CNode_154{[0]: ValueNode<Primitive> Return, [1]: CNode_153}
#   3: @_wrapped_call_impl_34:CNode_155{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.tuners.lora.model..<LoraModel::139902791625216>', [2]: ValueNode<Symbol> forward}


subgraph attr:
subgraph instance: ✓_wrapped_call_impl_35 : 0x199bf6e10
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @✓_wrapped_call_impl_35 parent: [subgraph @_wrapped_call_impl_34]() {
  %1(CNode_155) = $(_wrapped_call_impl_34):resolve(ClassMember, forward)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_156) = $(_wrapped_call_impl_34):MakeTuple()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %3(CNode_157) = $(_wrapped_call_impl_34):MakeTuple("input_ids", "attention_mask", "inputs_embeds", "labels", "output_attentions", "output_hidden_states", "return_dict")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %4(CNode_158) = $(_wrapped_call_impl_34):extract_keyword_arg("input_ids", %para27_kwargs[input_ids])
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %5(CNode_159) = $(_wrapped_call_impl_34):extract_keyword_arg("attention_mask", %para28_kwargs[attention_mask])
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %6(CNode_160) = $(_wrapped_call_impl_34):extract_keyword_arg("inputs_embeds", %para29_kwargs[inputs_embeds])
      : (<String, NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %7(CNode_161) = $(_wrapped_call_impl_34):extract_keyword_arg("labels", %para30_kwargs[labels])
      : (<String, NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %8(CNode_162) = $(_wrapped_call_impl_34):extract_keyword_arg("output_attentions", %para31_kwargs[output_attentions])
      : (<String, NoShape>, <Keyword[key : output_attentions, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %9(CNode_163) = $(_wrapped_call_impl_34):extract_keyword_arg("output_hidden_states", %para32_kwargs[output_hidden_states])
      : (<String, NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %10(CNode_164) = $(_wrapped_call_impl_34):extract_keyword_arg("return_dict", %para33_kwargs[return_dict])
      : (<String, NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %11(CNode_165) = $(_wrapped_call_impl_34):MakeTuple(%4, %5, %6, %7, %8, %9, %10)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %12(CNode_166) = $(_wrapped_call_impl_34):make_dict(%3, %11)
      : (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>) -> (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/

#------------------------> 15
  %13(CNode_167) = UnpackCall_unpack_call(%1, %2, %12)
      : (<Func, NoShape>, <Tuple[], TupleShape()>, <Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%13)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @✓_wrapped_call_impl_35:CNode_167{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.168, [1]: CNode_155, [2]: CNode_156, [3]: CNode_166}
#   2: @✓_wrapped_call_impl_35:CNode_169{[0]: ValueNode<Primitive> Return, [1]: CNode_167}


subgraph attr:
core : 1
subgraph instance: UnpackCall_36 : 0x199c859f0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
subgraph @UnpackCall_36(%para34_, %para35_, %para36_) {
  %1(CNode_167) = dict_getitem(%para36_39, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_167) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %3(CNode_167) = dict_getitem(%para36_39, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %4(CNode_167) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %5(CNode_167) = dict_getitem(%para36_39, "inputs_embeds")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %6(CNode_167) = make_keyword_arg("inputs_embeds", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : inputs_embeds, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %7(CNode_167) = dict_getitem(%para36_39, "labels")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %8(CNode_167) = make_keyword_arg("labels", %7)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : labels, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %9(CNode_167) = dict_getitem(%para36_39, "output_attentions")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %10(CNode_167) = make_keyword_arg("output_attentions", %9)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_attentions, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %11(CNode_167) = dict_getitem(%para36_39, "output_hidden_states")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %12(CNode_167) = make_keyword_arg("output_hidden_states", %11)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_hidden_states, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %13(CNode_167) = dict_getitem(%para36_39, "return_dict")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %14(CNode_167) = make_keyword_arg("return_dict", %13)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : return_dict, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/

#------------------------> 16
  %15(CNode_167) = %para34_37(%2, %4, %6, %8, %10, %12, %14)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>, <Keyword[key : labels, value : None], NoShape>, <Keyword[key : output_attentions, value : None], NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%15)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @UnpackCall_36:CNode_167{[0]: param_37, [1]: CNode_167, [2]: CNode_167, [3]: CNode_167, [4]: CNode_167, [5]: CNode_167, [6]: CNode_167, [7]: CNode_167}
#   2: @UnpackCall_36:CNode_167{[0]: ValueNode<Primitive> Return, [1]: CNode_167}


subgraph attr:
subgraph instance: forward_40 : 0x199c8e250
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:205/    def forward(self, *args: Any, **kwargs: Any):/
subgraph @forward_40(%para37_kwargs[input_ids], %para38_kwargs[attention_mask], %para39_kwargs[inputs_embeds], %para40_kwargs[labels], %para41_kwargs[output_attentions], %para42_kwargs[output_hidden_states], %para43_kwargs[return_dict]) {
  %1(CNode_170) = resolve(ClassMember, model)
      : (<External, NoShape>, <External, NoShape>) -> (<Class, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %2(CNode_171) = getattr(%1, "forward")
      : (<Class, NoShape>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %3(CNode_172) = MakeTuple()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:205/    def forward(self, *args: Any, **kwargs: Any):/
  %4(CNode_173) = MakeTuple("input_ids", "attention_mask", "inputs_embeds", "labels", "output_attentions", "output_hidden_states", "return_dict")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:205/    def forward(self, *args: Any, **kwargs: Any):/
  %5(CNode_174) = extract_keyword_arg("input_ids", %para37_kwargs[input_ids])
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %6(CNode_175) = extract_keyword_arg("attention_mask", %para38_kwargs[attention_mask])
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %7(CNode_176) = extract_keyword_arg("inputs_embeds", %para39_kwargs[inputs_embeds])
      : (<String, NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %8(CNode_177) = extract_keyword_arg("labels", %para40_kwargs[labels])
      : (<String, NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %9(CNode_178) = extract_keyword_arg("output_attentions", %para41_kwargs[output_attentions])
      : (<String, NoShape>, <Keyword[key : output_attentions, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %10(CNode_179) = extract_keyword_arg("output_hidden_states", %para42_kwargs[output_hidden_states])
      : (<String, NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %11(CNode_180) = extract_keyword_arg("return_dict", %para43_kwargs[return_dict])
      : (<String, NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %12(CNode_181) = MakeTuple(%5, %6, %7, %8, %9, %10, %11)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:205/    def forward(self, *args: Any, **kwargs: Any):/
  %13(CNode_182) = make_dict(%4, %12)
      : (<Tuple[String*7], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None*5], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape)>) -> (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:205/    def forward(self, *args: Any, **kwargs: Any):/

#------------------------> 17
  %14(CNode_183) = UnpackCall_unpack_call(%2, %3, %13)
      : (<Func, NoShape>, <Tuple[], TupleShape()>, <Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  Return(%14)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
}
# Order:
#   1: @forward_40:CNode_170{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.peft.tuners.lora.model..<LoraModel::139902791625216>', [2]: ValueNode<Symbol> model}
#   2: @forward_40:CNode_171{[0]: ValueNode<Primitive> getattr, [1]: CNode_170, [2]: ValueNode<StringImm> forward}
#   3: @forward_40:CNode_183{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.184, [1]: CNode_171, [2]: CNode_172, [3]: CNode_182}
#   4: @forward_40:CNode_185{[0]: ValueNode<Primitive> Return, [1]: CNode_183}


subgraph attr:
core : 1
subgraph instance: UnpackCall_41 : 0x199be8790
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
subgraph @UnpackCall_41(%para44_, %para45_, %para46_) {
  %1(CNode_183) = dict_getitem(%para46_44, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %2(CNode_183) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %3(CNode_183) = dict_getitem(%para46_44, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %4(CNode_183) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %5(CNode_183) = dict_getitem(%para46_44, "inputs_embeds")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %6(CNode_183) = make_keyword_arg("inputs_embeds", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : inputs_embeds, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %7(CNode_183) = dict_getitem(%para46_44, "labels")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %8(CNode_183) = make_keyword_arg("labels", %7)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : labels, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %9(CNode_183) = dict_getitem(%para46_44, "output_attentions")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %10(CNode_183) = make_keyword_arg("output_attentions", %9)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_attentions, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %11(CNode_183) = dict_getitem(%para46_44, "output_hidden_states")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %12(CNode_183) = make_keyword_arg("output_hidden_states", %11)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : output_hidden_states, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %13(CNode_183) = dict_getitem(%para46_44, "return_dict")
      : (<Dictionary[[input_ids,attention_mask,inputs_embeds,labels,output_attentions,output_hidden_states,return_dict,],[Tensor[Int64]*2,None*5]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  %14(CNode_183) = make_keyword_arg("return_dict", %13)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : return_dict, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/

#------------------------> 18
  %15(CNode_183) = %para44_42(%2, %4, %6, %8, %10, %12, %14)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>, <Keyword[key : labels, value : None], NoShape>, <Keyword[key : output_attentions, value : None], NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  Return(%15)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
}
# Order:
#   1: @UnpackCall_41:CNode_183{[0]: param_42, [1]: CNode_183, [2]: CNode_183, [3]: CNode_183, [4]: CNode_183, [5]: CNode_183, [6]: CNode_183, [7]: CNode_183}
#   2: @UnpackCall_41:CNode_183{[0]: ValueNode<Primitive> Return, [1]: CNode_183}


subgraph attr:
subgraph instance: forward_45 : 0x199d09180
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:691/    def forward(/
subgraph @forward_45(%para47_input_ids, %para48_attention_mask, %para49_inputs_embeds, %para50_labels, %para51_output_attentions, %para52_output_hidden_states, %para53_return_dict) {
  %1(CNode_186) = resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/
  %2(CNode_187) = extract_keyword_arg("labels", %para50_labels)
      : (<String, NoShape>, <Keyword[key : labels, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %3(CNode_188) = %1(%2, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/
  %4(CNode_189) = Cond(%3, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/
  %5(CNode_190) = Switch(%4, @✓forward_191, @✗forward_192)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/
  %6(CNode_193) = %5()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/

#------------------------> 19
  %7(CNode_194) = call @↓forward_46(%6)
      : (<None, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/peft/tuners/tuners_utils.py:218/        return self.model.forward(*args, **kwargs)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:756/        if labels is not None:/
}
# Order:
#   1: @forward_45:CNode_195{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#   2: @forward_45:CNode_196{[0]: CNode_195, [1]: CNode_197, [2]: ValueNode<None> None}
#   3: @forward_45:CNode_198{[0]: ValueNode<Primitive> Cond, [1]: CNode_196, [2]: ValueNode<BoolImm> false}
#   4: @forward_45:CNode_199{[0]: ValueNode<Primitive> Switch, [1]: CNode_198, [2]: ValueNode<FuncGraph> ↰forward_200, [3]: ValueNode<FuncGraph> ↱forward_201}
#   5: @forward_45:output_attentions{[0]: CNode_199}
#   6: @forward_45:CNode_202{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#   7: @forward_45:CNode_203{[0]: CNode_202, [1]: CNode_204, [2]: ValueNode<None> None}
#   8: @forward_45:CNode_205{[0]: ValueNode<Primitive> Cond, [1]: CNode_203, [2]: ValueNode<BoolImm> false}
#   9: @forward_45:CNode_206{[0]: ValueNode<Primitive> Switch, [1]: CNode_205, [2]: ValueNode<FuncGraph> ↰forward_207, [3]: ValueNode<FuncGraph> ↱forward_208}
#  10: @forward_45:output_hidden_states{[0]: CNode_206}
#  11: @forward_45:CNode_209{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#  12: @forward_45:CNode_210{[0]: CNode_209, [1]: CNode_211, [2]: ValueNode<None> None}
#  13: @forward_45:CNode_212{[0]: ValueNode<Primitive> Cond, [1]: CNode_210, [2]: ValueNode<BoolImm> false}
#  14: @forward_45:CNode_213{[0]: ValueNode<Primitive> Switch, [1]: CNode_212, [2]: ValueNode<FuncGraph> ↰forward_214, [3]: ValueNode<FuncGraph> ↱forward_215}
#  15: @forward_45:return_dict{[0]: CNode_213}
#  16: @forward_45:CNode_216{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2ForCausalLM::139902788173200>', [2]: ValueNode<Symbol> model}
#  17: @forward_45:CNode_217{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  18: @forward_45:CNode_218{[0]: CNode_217, [1]: ValueNode<StringImm> input_ids, [2]: ValueNode<StringImm> attention_mask, [3]: ValueNode<StringImm> position_ids, [4]: ValueNode<StringImm> past_key_values, [5]: ValueNode<StringImm> inputs_embeds, [6]: ValueNode<StringImm> use_cache, [7]: ValueNode<StringImm> output_attentions, [8]: ValueNode<StringImm> output_hidden_states, [9]: ValueNode<StringImm> return_dict, [10]: ValueNode<StringImm> cache_position}
#  19: @forward_45:CNode_219{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  20: @forward_45:CNode_220{[0]: CNode_219, [1]: CNode_221, [2]: CNode_222, [3]: ValueNode<None> None, [4]: ValueNode<None> None, [5]: CNode_223, [6]: ValueNode<None> None, [7]: output_attentions, [8]: output_hidden_states, [9]: return_dict, [10]: ValueNode<None> None}
#  21: @forward_45:CNode_224{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> make_dict}
#  22: @forward_45:CNode_225{[0]: CNode_224, [1]: CNode_218, [2]: CNode_220}
#  23: @forward_45:outputs{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.226, [1]: CNode_216, [2]: CNode_225}
#  24: @forward_45:CNode_227{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> getitem}
#  25: @forward_45:hidden_states{[0]: CNode_227, [1]: outputs, [2]: ValueNode<Int64Imm> 0}
#  26: @forward_45:CNode_228{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2ForCausalLM::139902788173200>', [2]: ValueNode<Symbol> lm_head}
#  27: @forward_229:CNode_230{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#  28: @forward_229:CNode_231{[0]: CNode_230, [1]: hidden_states}
#  29: @forward_45:logits{[0]: CNode_228, [1]: hidden_states}
#  30: @forward_45:CNode_232{[0]: ValueNode<Primitive> getattr, [1]: logits, [2]: ValueNode<StringImm> float}
#  31: @forward_45:logits{[0]: CNode_232}
#  32: @forward_45:CNode_186{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#  33: @forward_45:CNode_188{[0]: CNode_186, [1]: CNode_187, [2]: ValueNode<None> None}
#  34: @forward_45:CNode_189{[0]: ValueNode<Primitive> Cond, [1]: CNode_188, [2]: ValueNode<BoolImm> false}
#  35: @forward_45:CNode_233{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> CrossEntropyLoss}
#  36: @forward_45:CNode_190{[0]: ValueNode<Primitive> Switch, [1]: CNode_189, [2]: ValueNode<FuncGraph> ✓forward_191, [3]: ValueNode<FuncGraph> ✗forward_192}
#  37: @forward_45:CNode_193{[0]: CNode_190}
#  38: @forward_45:CNode_194{[0]: ValueNode<FuncGraph> ↓forward_46, [1]: CNode_193}
#  39: @forward_45:CNode_234{[0]: ValueNode<Primitive> Return, [1]: CNode_194}
#  40: @forward_45:CNode_235{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> CausalLMOutputWithPast}


subgraph attr:
after_block : 1
subgraph instance: ↓forward_46 : 0x199c13c80
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:691/    def forward(/
subgraph @↓forward_46 parent: [subgraph @forward_45](%para54_) {
  %1(CNode_236) = resolve(Ast, not_)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
  %2(CNode_209) = $(forward_45):resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %3(CNode_211) = $(forward_45):extract_keyword_arg("return_dict", %para53_return_dict)
      : (<String, NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %4(CNode_210) = $(forward_45):%2(%3, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %5(CNode_212) = $(forward_45):Cond(%4, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %6(CNode_213) = $(forward_45):Switch(%5, @↰forward_214, @↱forward_215)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %7(return_dict) = $(forward_45):%6()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %8(CNode_237) = %1(%7)
      : (<Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
  %9(CNode_238) = Cond(%8, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
  %10(CNode_239) = Switch(%9, @✓↓forward_240, @✗↓forward_47)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/

#------------------------> 20
  %11(CNode_241) = %10()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
}
# Order:
#   1: @↓forward_46:CNode_236{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> not_}
#   2: @↓forward_46:CNode_237{[0]: CNode_236, [1]: return_dict}
#   3: @↓forward_46:CNode_238{[0]: ValueNode<Primitive> Cond, [1]: CNode_237, [2]: ValueNode<BoolImm> false}
#   4: @↓forward_46:CNode_239{[0]: ValueNode<Primitive> Switch, [1]: CNode_238, [2]: ValueNode<FuncGraph> ✓↓forward_240, [3]: ValueNode<FuncGraph> ✗↓forward_47}
#   5: @↓forward_46:CNode_241{[0]: CNode_239}
#   6: @↓forward_46:CNode_242{[0]: ValueNode<Primitive> Return, [1]: CNode_241}
#   7: @↓forward_243:фCausalLMOutputWithPast{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> CausalLMOutputWithPast}


subgraph attr:
subgraph instance: ✗↓forward_47 : 0x199c161f0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:691/    def forward(/
subgraph @✗↓forward_47 parent: [subgraph @↓forward_46]() {

#------------------------> 21
  %1(CNode_244) = call @2↓forward_48()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:767/        if not return_dict:/
}
# Order:
#   1: @✗↓forward_47:CNode_244{[0]: ValueNode<FuncGraph> 2↓forward_48}
#   2: @✗↓forward_47:CNode_245{[0]: ValueNode<Primitive> Return, [1]: CNode_244}


subgraph attr:
after_block : 1
subgraph instance: 2↓forward_48 : 0x199d0a780
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:691/    def forward(/
subgraph @2↓forward_48 parent: [subgraph @↓forward_46]() {
  %1(CNode_235) = $(forward_45):resolve(SymbolStr, CausalLMOutputWithPast)
      : (<External, NoShape>, <External, NoShape>) -> (<TypeType, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %2(CNode_246) = resolve(CommonOPS, make_dict)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %3(CNode_247) = resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %4(CNode_248) = %3("loss", "logits", "past_key_values", "hidden_states", "attentions")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %5(CNode_249) = resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %6(CNode_228) = $(forward_45):resolve(ClassMember, lm_head)
      : (<External, NoShape>, <External, NoShape>) -> (<Class, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:752/        logits = self.lm_head(hidden_states)/
  %7(CNode_227) = $(forward_45):resolve(CommonOPS, getitem)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:751/        hidden_states = outputs[0]/
  %8(CNode_216) = $(forward_45):resolve(ClassMember, model)
      : (<External, NoShape>, <External, NoShape>) -> (<Class, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %9(CNode_224) = $(forward_45):resolve(CommonOPS, make_dict)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %10(CNode_217) = $(forward_45):resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %11(CNode_218) = $(forward_45):%10("input_ids", "attention_mask", "position_ids", "past_key_values", "inputs_embeds", "use_cache", "output_attentions", "output_hidden_states", "return_dict", "cache_position")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*10], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %12(CNode_219) = $(forward_45):resolve(CommonOPS, MakeTuple)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %13(CNode_221) = $(forward_45):extract_keyword_arg("input_ids", %para47_input_ids)
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %14(CNode_222) = $(forward_45):extract_keyword_arg("attention_mask", %para48_attention_mask)
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %15(CNode_223) = $(forward_45):extract_keyword_arg("inputs_embeds", %para49_inputs_embeds)
      : (<String, NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %16(CNode_195) = $(forward_45):resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:731/        output_attentions = output_attentions if output_attentions is not None else self.config.output_attentions/
  %17(CNode_197) = $(forward_45):extract_keyword_arg("output_attentions", %para51_output_attentions)
      : (<String, NoShape>, <Keyword[key : output_attentions, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %18(CNode_196) = $(forward_45):%16(%17, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:731/        output_attentions = output_attentions if output_attentions is not None else self.config.output_attentions/
  %19(CNode_198) = $(forward_45):Cond(%18, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:731/        output_attentions = output_attentions if output_attentions is not None else self.config.output_attentions/
  %20(CNode_199) = $(forward_45):Switch(%19, @↰forward_200, @↱forward_201)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:731/        output_attentions = output_attentions if output_attentions is not None else self.config.output_attentions/
  %21(output_attentions) = $(forward_45):%20()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:731/        output_attentions = output_attentions if output_attentions is not None else self.config.output_attentions/
  %22(CNode_202) = $(forward_45):resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:733/            output_hidden_states if output_hidden_states is not None else self.config.output_hidden_states/
  %23(CNode_204) = $(forward_45):extract_keyword_arg("output_hidden_states", %para52_output_hidden_states)
      : (<String, NoShape>, <Keyword[key : output_hidden_states, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %24(CNode_203) = $(forward_45):%22(%23, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:733/            output_hidden_states if output_hidden_states is not None else self.config.output_hidden_states/
  %25(CNode_205) = $(forward_45):Cond(%24, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:733/            output_hidden_states if output_hidden_states is not None else self.config.output_hidden_states/
  %26(CNode_206) = $(forward_45):Switch(%25, @↰forward_207, @↱forward_208)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:733/            output_hidden_states if output_hidden_states is not None else self.config.output_hidden_states/
  %27(output_hidden_states) = $(forward_45):%26()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:733/            output_hidden_states if output_hidden_states is not None else self.config.output_hidden_states/
  %28(CNode_209) = $(forward_45):resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %29(CNode_211) = $(forward_45):extract_keyword_arg("return_dict", %para53_return_dict)
      : (<String, NoShape>, <Keyword[key : return_dict, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %30(CNode_210) = $(forward_45):%28(%29, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %31(CNode_212) = $(forward_45):Cond(%30, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %32(CNode_213) = $(forward_45):Switch(%31, @↰forward_214, @↱forward_215)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %33(return_dict) = $(forward_45):%32()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:735/        return_dict = return_dict if return_dict is not None else self.config.use_return_dict/
  %34(CNode_220) = $(forward_45):%12(%13, %14, None, None, %15, None, %21, %27, %33, None)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <Bool, NoShape>, <Bool, NoShape>, <Bool, NoShape>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None*4,Bool*3,None], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %35(CNode_225) = $(forward_45):%9(%11, %34)
      : (<Tuple[String*10], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None*4,Bool*3,None], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>) -> (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/

#------------------------> 22
  %36(outputs) = $(forward_45):UnpackCall_unpack_call(%8, %35)
      : (<Class, NoShape>, <Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %37(hidden_states) = $(forward_45):%7(%36, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:751/        hidden_states = outputs[0]/
  %38(logits) = $(forward_45):%6(%37)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:752/        logits = self.lm_head(hidden_states)/
  %39(CNode_232) = $(forward_45):getattr(%38, "float")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:753/        logits = logits.float()/
  %40(logits) = $(forward_45):%39()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:753/        logits = logits.float()/
  %41(CNode_250) = getattr(%36, "past_key_values")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:774/            past_key_values=outputs.past_key_values,/
  %42(CNode_251) = getattr(%36, "hidden_states")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:775/            hidden_states=outputs.hidden_states,/
  %43(CNode_252) = getattr(%36, "attentions")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:776/            attentions=outputs.attentions,/
  %44(CNode_253) = %5(%para54_фloss, %40, %41, %42, %43)
      : (<null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %45(CNode_254) = %2(%4, %44)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  %46(CNode_255) = UnpackCall_unpack_call(%1, %45)
      : (<TypeType, NoShape>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
  Return(%46)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:771/        return CausalLMOutputWithPast(/
}
# Order:
#   1: @2↓forward_48:CNode_250{[0]: ValueNode<Primitive> getattr, [1]: outputs, [2]: ValueNode<StringImm> past_key_values}
#   2: @2↓forward_48:CNode_251{[0]: ValueNode<Primitive> getattr, [1]: outputs, [2]: ValueNode<StringImm> hidden_states}
#   3: @2↓forward_48:CNode_252{[0]: ValueNode<Primitive> getattr, [1]: outputs, [2]: ValueNode<StringImm> attentions}
#   4: @2↓forward_48:CNode_247{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   5: @2↓forward_48:CNode_248{[0]: CNode_247, [1]: ValueNode<StringImm> loss, [2]: ValueNode<StringImm> logits, [3]: ValueNode<StringImm> past_key_values, [4]: ValueNode<StringImm> hidden_states, [5]: ValueNode<StringImm> attentions}
#   6: @2↓forward_48:CNode_249{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   7: @2↓forward_48:CNode_253{[0]: CNode_249, [1]: param_фloss, [2]: logits, [3]: CNode_250, [4]: CNode_251, [5]: CNode_252}
#   8: @2↓forward_48:CNode_246{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> make_dict}
#   9: @2↓forward_48:CNode_254{[0]: CNode_246, [1]: CNode_248, [2]: CNode_253}
#  10: @2↓forward_48:CNode_255{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.256, [1]: CNode_235, [2]: CNode_254}
#  11: @2↓forward_48:CNode_257{[0]: ValueNode<Primitive> Return, [1]: CNode_255}


subgraph attr:
core : 1
subgraph instance: UnpackCall_49 : 0x199dc6eb0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
subgraph @UnpackCall_49(%para55_, %para56_) {
  %1(outputs) = dict_getitem(%para56_51, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %2(outputs) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %3(outputs) = dict_getitem(%para56_51, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %4(outputs) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %5(outputs) = dict_getitem(%para56_51, "position_ids")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %6(outputs) = make_keyword_arg("position_ids", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : position_ids, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %7(outputs) = dict_getitem(%para56_51, "past_key_values")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %8(outputs) = make_keyword_arg("past_key_values", %7)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : past_key_values, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %9(outputs) = dict_getitem(%para56_51, "inputs_embeds")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %10(outputs) = make_keyword_arg("inputs_embeds", %9)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : inputs_embeds, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %11(outputs) = dict_getitem(%para56_51, "use_cache")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %12(outputs) = make_keyword_arg("use_cache", %11)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : use_cache, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %13(outputs) = dict_getitem(%para56_51, "output_attentions")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %14(outputs) = make_keyword_arg("output_attentions", %13)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : output_attentions, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %15(outputs) = dict_getitem(%para56_51, "output_hidden_states")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %16(outputs) = make_keyword_arg("output_hidden_states", %15)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : output_hidden_states, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %17(outputs) = dict_getitem(%para56_51, "return_dict")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %18(outputs) = make_keyword_arg("return_dict", %17)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : return_dict, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %19(outputs) = dict_getitem(%para56_51, "cache_position")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  %20(outputs) = make_keyword_arg("cache_position", %19)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : cache_position, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/

#------------------------> 23
  %21(outputs) = %para55_50(%2, %4, %6, %8, %10, %12, %14, %16, %18, %20)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : position_ids, value : None], NoShape>, <Keyword[key : past_key_values, value : None], NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>, <Keyword[key : use_cache, value : None], NoShape>, <Keyword[key : output_attentions, value : Bool], NoShape>, <Keyword[key : output_hidden_states, value : Bool], NoShape>, <Keyword[key : return_dict, value : Bool], NoShape>, <Keyword[key : cache_position, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
  Return(%21)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:738/        outputs = self.model(/
}
# Order:
#   1: @UnpackCall_49:outputs{[0]: param_50, [1]: outputs, [2]: outputs, [3]: outputs, [4]: outputs, [5]: outputs, [6]: outputs, [7]: outputs, [8]: outputs, [9]: outputs, [10]: outputs}
#   2: @UnpackCall_49:outputs{[0]: ValueNode<Primitive> Return, [1]: outputs}


subgraph attr:
subgraph instance: _wrapped_call_impl_52 : 0x199dd42e0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @_wrapped_call_impl_52(%para57_kwargs[input_ids], %para58_kwargs[attention_mask], %para59_kwargs[position_ids], %para60_kwargs[past_key_values], %para61_kwargs[inputs_embeds], %para62_kwargs[use_cache], %para63_kwargs[output_attentions], %para64_kwargs[output_hidden_states], %para65_kwargs[return_dict], %para66_kwargs[cache_position]) {

#------------------------> 24
  %1(CNode_258) = call @✓_wrapped_call_impl_53()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:389/        if self.__ms_class__:/
}
# Order:
#   1: @_wrapped_call_impl_52:CNode_258{[0]: ValueNode<FuncGraph> ✓_wrapped_call_impl_53}
#   2: @_wrapped_call_impl_52:CNode_259{[0]: ValueNode<Primitive> Return, [1]: CNode_258}
#   3: @_wrapped_call_impl_52:CNode_260{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> forward}


subgraph attr:
subgraph instance: ✓_wrapped_call_impl_53 : 0x199dd0ed0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
subgraph @✓_wrapped_call_impl_53 parent: [subgraph @_wrapped_call_impl_52]() {
  %1(CNode_260) = $(_wrapped_call_impl_52):resolve(ClassMember, forward)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_261) = $(_wrapped_call_impl_52):MakeTuple()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %3(CNode_262) = $(_wrapped_call_impl_52):MakeTuple("input_ids", "attention_mask", "position_ids", "past_key_values", "inputs_embeds", "use_cache", "output_attentions", "output_hidden_states", "return_dict", "cache_position")
      : (<String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Tuple[String*10], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %4(CNode_263) = $(_wrapped_call_impl_52):extract_keyword_arg("input_ids", %para57_kwargs[input_ids])
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %5(CNode_264) = $(_wrapped_call_impl_52):extract_keyword_arg("attention_mask", %para58_kwargs[attention_mask])
      : (<String, NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %6(CNode_265) = $(_wrapped_call_impl_52):extract_keyword_arg("position_ids", %para59_kwargs[position_ids])
      : (<String, NoShape>, <Keyword[key : position_ids, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %7(CNode_266) = $(_wrapped_call_impl_52):extract_keyword_arg("past_key_values", %para60_kwargs[past_key_values])
      : (<String, NoShape>, <Keyword[key : past_key_values, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %8(CNode_267) = $(_wrapped_call_impl_52):extract_keyword_arg("inputs_embeds", %para61_kwargs[inputs_embeds])
      : (<String, NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %9(CNode_268) = $(_wrapped_call_impl_52):extract_keyword_arg("use_cache", %para62_kwargs[use_cache])
      : (<String, NoShape>, <Keyword[key : use_cache, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %10(CNode_269) = $(_wrapped_call_impl_52):extract_keyword_arg("output_attentions", %para63_kwargs[output_attentions])
      : (<String, NoShape>, <Keyword[key : output_attentions, value : Bool], NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
  %11(CNode_270) = $(_wrapped_call_impl_52):extract_keyword_arg("output_hidden_states", %para64_kwargs[output_hidden_states])
      : (<String, NoShape>, <Keyword[key : output_hidden_states, value : Bool], NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
  %12(CNode_271) = $(_wrapped_call_impl_52):extract_keyword_arg("return_dict", %para65_kwargs[return_dict])
      : (<String, NoShape>, <Keyword[key : return_dict, value : Bool], NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
  %13(CNode_272) = $(_wrapped_call_impl_52):extract_keyword_arg("cache_position", %para66_kwargs[cache_position])
      : (<String, NoShape>, <Keyword[key : cache_position, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %14(CNode_273) = $(_wrapped_call_impl_52):MakeTuple(%4, %5, %6, %7, %8, %9, %10, %11, %12, %13)
      : (<Tensor[Int64], (3, 128)>, <Tensor[Int64], (3, 128)>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <None, NoShape>, <Bool, NoShape>, <Bool, NoShape>, <Bool, NoShape>, <None, NoShape>) -> (<Tuple[Tensor[Int64]*2,None*4,Bool*3,None], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/
  %15(CNode_274) = $(_wrapped_call_impl_52):make_dict(%3, %14)
      : (<Tuple[String*10], TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>, <Tuple[Tensor[Int64]*2,None*4,Bool*3,None], TupleShape((3, 128), (3, 128), NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape)>) -> (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:388/    def _wrapped_call_impl(self, *args, **kwargs):/

#------------------------> 25
  %16(CNode_275) = UnpackCall_unpack_call(%1, %2, %15)
      : (<Func, NoShape>, <Tuple[], TupleShape()>, <Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%16)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @✓_wrapped_call_impl_53:CNode_275{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.276, [1]: CNode_260, [2]: CNode_261, [3]: CNode_274}
#   2: @✓_wrapped_call_impl_53:CNode_277{[0]: ValueNode<Primitive> Return, [1]: CNode_275}


subgraph attr:
core : 1
subgraph instance: UnpackCall_54 : 0x199f431d0
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
subgraph @UnpackCall_54(%para67_, %para68_, %para69_) {
  %1(CNode_275) = dict_getitem(%para69_57, "input_ids")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %2(CNode_275) = make_keyword_arg("input_ids", %1)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %3(CNode_275) = dict_getitem(%para69_57, "attention_mask")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %4(CNode_275) = make_keyword_arg("attention_mask", %3)
      : (<String, NoShape>, <Tensor[Int64], (3, 128)>) -> (<Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %5(CNode_275) = dict_getitem(%para69_57, "position_ids")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %6(CNode_275) = make_keyword_arg("position_ids", %5)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : position_ids, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %7(CNode_275) = dict_getitem(%para69_57, "past_key_values")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %8(CNode_275) = make_keyword_arg("past_key_values", %7)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : past_key_values, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %9(CNode_275) = dict_getitem(%para69_57, "inputs_embeds")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %10(CNode_275) = make_keyword_arg("inputs_embeds", %9)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : inputs_embeds, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %11(CNode_275) = dict_getitem(%para69_57, "use_cache")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %12(CNode_275) = make_keyword_arg("use_cache", %11)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : use_cache, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %13(CNode_275) = dict_getitem(%para69_57, "output_attentions")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %14(CNode_275) = make_keyword_arg("output_attentions", %13)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : output_attentions, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %15(CNode_275) = dict_getitem(%para69_57, "output_hidden_states")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %16(CNode_275) = make_keyword_arg("output_hidden_states", %15)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : output_hidden_states, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %17(CNode_275) = dict_getitem(%para69_57, "return_dict")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %18(CNode_275) = make_keyword_arg("return_dict", %17)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : return_dict, value : Bool], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %19(CNode_275) = dict_getitem(%para69_57, "cache_position")
      : (<Dictionary[[input_ids,attention_mask,position_ids,past_key_values,inputs_embeds,use_cache,output_attentions,output_hidden_states,return_dict,cache_position,],[Tensor[Int64]*2,None*4,Bool*3,None]], NoShape>, <String, NoShape>) -> (<None, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  %20(CNode_275) = make_keyword_arg("cache_position", %19)
      : (<String, NoShape>, <None, NoShape>) -> (<Keyword[key : cache_position, value : None], NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/

#------------------------> 26
  %21(CNode_275) = %para67_55(%2, %4, %6, %8, %10, %12, %14, %16, %18, %20)
      : (<Keyword[key : input_ids, value : Tensor[Int64]], NoShape>, <Keyword[key : attention_mask, value : Tensor[Int64]], NoShape>, <Keyword[key : position_ids, value : None], NoShape>, <Keyword[key : past_key_values, value : None], NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>, <Keyword[key : use_cache, value : None], NoShape>, <Keyword[key : output_attentions, value : Bool], NoShape>, <Keyword[key : output_hidden_states, value : Bool], NoShape>, <Keyword[key : return_dict, value : Bool], NoShape>, <Keyword[key : cache_position, value : None], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
  Return(%21)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/core/nn/modules/module.py:390/            return self.forward(*args, **kwargs)/
}
# Order:
#   1: @UnpackCall_54:CNode_275{[0]: param_55, [1]: CNode_275, [2]: CNode_275, [3]: CNode_275, [4]: CNode_275, [5]: CNode_275, [6]: CNode_275, [7]: CNode_275, [8]: CNode_275, [9]: CNode_275, [10]: CNode_275}
#   2: @UnpackCall_54:CNode_275{[0]: ValueNode<Primitive> Return, [1]: CNode_275}


subgraph attr:
subgraph instance: forward_58 : 0x199ef7150
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:487/    def forward(/
subgraph @forward_58(%para70_input_ids, %para71_attention_mask, %para72_position_ids, %para73_past_key_values, %para74_inputs_embeds, %para75_use_cache, %para76_output_attentions, %para77_output_hidden_states, %para78_return_dict, %para79_cache_position) {
  %1(CNode_278) = resolve(Ast, xor)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %2(CNode_279) = resolve(Ast, is_)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %3(CNode_280) = extract_keyword_arg("input_ids", %para70_input_ids)
      : (<String, NoShape>, <Keyword[key : input_ids, value : Tensor[Int64]], NoShape>) -> (<Tensor[Int64], (3, 128)>)
      #scope: (Default)
  %4(CNode_281) = %2(%3, None)
      : (<Tensor[Int64], (3, 128)>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %5(CNode_282) = resolve(Ast, is_not)
      : (<External, NoShape>, <External, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %6(CNode_283) = extract_keyword_arg("inputs_embeds", %para74_inputs_embeds)
      : (<String, NoShape>, <Keyword[key : inputs_embeds, value : None], NoShape>) -> (<None, NoShape>)
      #scope: (Default)
  %7(CNode_284) = %5(%6, None)
      : (<None, NoShape>, <None, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/

#------------------------> 27
  %8(CNode_285) = %1(%4, %7)
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %9(CNode_286) = Cond(%8, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %10(CNode_287) = Switch(%9, @✓forward_288, @✗forward_289)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %11(CNode_290) = %10()
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
}
# Order:
#   1: @forward_58:CNode_291{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#   2: @forward_58:CNode_292{[0]: CNode_291, [1]: CNode_293, [2]: ValueNode<None> None}
#   3: @forward_58:CNode_294{[0]: ValueNode<Primitive> Cond, [1]: CNode_292, [2]: ValueNode<BoolImm> false}
#   4: @forward_58:CNode_295{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> config}
#   5: @forward_58:CNode_296{[0]: ValueNode<Primitive> Switch, [1]: CNode_294, [2]: ValueNode<FuncGraph> ↰forward_297, [3]: ValueNode<FuncGraph> ↱forward_298}
#   6: @forward_58:output_attentions{[0]: CNode_296}
#   7: @forward_58:CNode_299{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#   8: @forward_58:CNode_300{[0]: CNode_299, [1]: CNode_301, [2]: ValueNode<None> None}
#   9: @forward_58:CNode_302{[0]: ValueNode<Primitive> Cond, [1]: CNode_300, [2]: ValueNode<BoolImm> false}
#  10: @forward_58:CNode_303{[0]: ValueNode<Primitive> Switch, [1]: CNode_302, [2]: ValueNode<FuncGraph> ↰forward_304, [3]: ValueNode<FuncGraph> ↱forward_305}
#  11: @forward_58:output_hidden_states{[0]: CNode_303}
#  12: @forward_58:CNode_306{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#  13: @forward_58:CNode_307{[0]: CNode_306, [1]: CNode_308, [2]: ValueNode<None> None}
#  14: @forward_58:CNode_309{[0]: ValueNode<Primitive> Cond, [1]: CNode_307, [2]: ValueNode<BoolImm> false}
#  15: @forward_58:CNode_310{[0]: ValueNode<Primitive> Switch, [1]: CNode_309, [2]: ValueNode<FuncGraph> ↰forward_311, [3]: ValueNode<FuncGraph> ↱forward_312}
#  16: @forward_58:use_cache{[0]: CNode_310}
#  17: @forward_58:CNode_313{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#  18: @forward_58:CNode_314{[0]: CNode_313, [1]: CNode_315, [2]: ValueNode<None> None}
#  19: @forward_58:CNode_316{[0]: ValueNode<Primitive> Cond, [1]: CNode_314, [2]: ValueNode<BoolImm> false}
#  20: @forward_58:CNode_317{[0]: ValueNode<Primitive> Switch, [1]: CNode_316, [2]: ValueNode<FuncGraph> ↰forward_318, [3]: ValueNode<FuncGraph> ↱forward_319}
#  21: @forward_58:return_dict{[0]: CNode_317}
#  22: @forward_58:CNode_279{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_}
#  23: @forward_58:CNode_281{[0]: CNode_279, [1]: CNode_280, [2]: ValueNode<None> None}
#  24: @forward_58:CNode_282{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> is_not}
#  25: @forward_58:CNode_284{[0]: CNode_282, [1]: CNode_283, [2]: ValueNode<None> None}
#  26: @forward_58:CNode_278{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> Ast: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> xor}
#  27: @forward_58:CNode_285{[0]: CNode_278, [1]: CNode_281, [2]: CNode_284}
#  28: @forward_58:CNode_286{[0]: ValueNode<Primitive> Cond, [1]: CNode_285, [2]: ValueNode<BoolImm> false}
#  29: @forward_58:CNode_287{[0]: ValueNode<Primitive> Switch, [1]: CNode_286, [2]: ValueNode<FuncGraph> ✓forward_288, [3]: ValueNode<FuncGraph> ✗forward_289}
#  30: @forward_58:CNode_290{[0]: CNode_287}
#  31: @forward_58:CNode_320{[0]: ValueNode<Primitive> Return, [1]: CNode_290}
#  32: @forward_58:CNode_321{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> isinstance}
#  33: @forward_58:CNode_322{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> Cache}
#  34: @forward_58:CNode_323{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> DynamicCache}
#  35: @forward_58:CNode_324{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> logger}
#  36: @forward_58:CNode_325{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> embed_tokens}
#  37: @forward_58:CNode_326{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> ops}
#  38: @forward_58:CNode_327{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> _update_causal_mask}
#  39: @forward_58:CNode_328{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> layers}
#  40: @forward_58:CNode_329{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2..<Qwen2Model::139902791624688>', [2]: ValueNode<Symbol> norm}
#  41: @forward_58:CNode_330{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> tuple}
#  42: @forward_58:CNode_331{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindnlp.transformers.models.qwen2.modeling_qwen2', [2]: ValueNode<Symbol> BaseModelOutputWithPast}


subgraph attr:
subgraph instance: _bitwise_xor_scalar_59 : 0x199feb550
# In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindspore/ops/composite/multitype_ops/bitwise_xor_impl.py:30/def _bitwise_xor_scalar(x, y):/
subgraph @_bitwise_xor_scalar_59(%para80_x, %para81_y) {
  %1(CNode_285) = resolve(SymbolStr, inner)
      : (<External, NoShape>, <External, NoShape>) -> (<External, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  %2(CNode_285) = getattr(%1, "bit_xor")
      : (<External, NoShape>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/

#------------------------> 28
  %3(CNode_285) = %2(%para80_x, %para81_y)
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/miniconda3/envs/mindspore2.2/lib/python3.9/site-packages/mindnlp/transformers/models/qwen2/modeling_qwen2.py:508/        if (input_ids is None) ^ (inputs_embeds is not None):/
}
# Order:
#   1: @_bitwise_xor_scalar_59:CNode_285{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> SymbolStr: 'Namespace:mindspore.ops.composite.multitype_ops.bitwise_xor_impl', [2]: ValueNode<Symbol> inner}
#   2: @_bitwise_xor_scalar_59:CNode_285{[0]: ValueNode<Primitive> getattr, [1]: CNode_285, [2]: ValueNode<StringImm> bit_xor}
#   3: @_bitwise_xor_scalar_332:CNode_333{[0]: ValueNode<Primitive> resolve, [1]: ValueNode<NameSpace> CommonOPS: 'Namespace:mindspore._extends.parse.trope', [2]: ValueNode<Symbol> MakeTuple}
#   4: @_bitwise_xor_scalar_332:CNode_334{[0]: CNode_333, [1]: param_x, [2]: param_y}
#   5: @_bitwise_xor_scalar_59:CNode_285{[0]: CNode_285, [1]: param_x, [2]: param_y}
#   6: @_bitwise_xor_scalar_59:CNode_285{[0]: ValueNode<Primitive> Return, [1]: CNode_285}


# ===============================================================================================
# The total of function graphs in evaluation stack: 29/34 (Ignored 5 internal frames).
# ===============================================================================================


# ===============================================================================================
# The rest function graphs are the following:
# ===============================================================================================
subgraph attr:
subgraph instance: compute_ce_loss_74 : 0x199a17210
# In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:134/    def compute_ce_loss(logits, labels):/
subgraph @compute_ce_loss_74(%para82_logits, %para83_labels) {
  %1(loss_fct) = ClassType()
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:135/        loss_fct = CrossEntropyLossForCausalLM()/
  %2(loss) = %1(%para82_logits, %para83_labels)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:137/        loss = loss_fct(logits, labels)/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /home/zjj/xjd/huawei-ict-2024/ChatStyle/train_simple.py:139/        return loss/
}
# Order:
#   1: @compute_ce_loss_74:loss_fct{[0]: ValueNode<ClassType> class 'losser.CrossEntropyLossForCausalLM'}
#   2: @compute_ce_loss_74:loss{[0]: loss_fct, [1]: param_logits, [2]: param_labels}
#   3: @compute_ce_loss_74:CNode_335{[0]: ValueNode<Primitive> Return, [1]: loss}


